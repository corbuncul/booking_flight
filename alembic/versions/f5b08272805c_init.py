"""init

Revision ID: f5b08272805c
Revises: 
Create Date: 2025-06-01 00:41:12.259532

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f5b08272805c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('city',
    sa.Column('code', sa.String(length=5), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_city_code'), 'city', ['code'], unique=True)
    op.create_table('discount',
    sa.Column('code', sa.String(length=5), nullable=True),
    sa.Column('discount_percent', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_discount_code'), 'discount', ['code'], unique=True)
    op.create_table('flight',
    sa.Column('number', sa.String(length=10), nullable=True),
    sa.Column('board', sa.String(length=10), nullable=True),
    sa.Column('date_flight', sa.Date(), nullable=False),
    sa.Column('time_flight', sa.Time(), nullable=False),
    sa.Column('status', sa.Enum('PLANNED', 'DEPARTED', 'CANCELLED', name='flightstatus'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('passenger',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('surname', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('doc_number', sa.String(length=15), nullable=False),
    sa.Column('tg_id', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('username', sa.String(length=20), nullable=True),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('surname', sa.String(length=50), nullable=True),
    sa.Column('tg_id', sa.BigInteger(), nullable=False),
    sa.Column('tg_username', sa.String(length=50), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tg_id'),
    sa.UniqueConstraint('tg_username'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('flight_city',
    sa.Column('flight_id', sa.Integer(), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ),
    sa.ForeignKeyConstraint(['flight_id'], ['flight.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('route_cost',
    sa.Column('from_city_id', sa.Integer(), nullable=True),
    sa.Column('to_city_id', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['from_city_id'], ['city.id'], ),
    sa.ForeignKeyConstraint(['to_city_id'], ['city.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ticket',
    sa.Column('number', sa.String(length=15), nullable=True),
    sa.Column('status', sa.Enum('BOOKED', 'PAID', 'CANCELLED', name='ticketstatus'), nullable=True),
    sa.Column('passenger_id', sa.Integer(), nullable=True),
    sa.Column('flight_id', sa.Integer(), nullable=True),
    sa.Column('from_city_id', sa.Integer(), nullable=True),
    sa.Column('to_city_id', sa.Integer(), nullable=True),
    sa.Column('discount_code', sa.String(length=5), nullable=True),
    sa.Column('final_price', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('paid_date', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['flight_id'], ['flight.id'], ),
    sa.ForeignKeyConstraint(['from_city_id'], ['city.id'], ),
    sa.ForeignKeyConstraint(['passenger_id'], ['passenger.id'], ),
    sa.ForeignKeyConstraint(['to_city_id'], ['city.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ticket')
    op.drop_table('route_cost')
    op.drop_table('flight_city')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('passenger')
    op.drop_table('flight')
    op.drop_index(op.f('ix_discount_code'), table_name='discount')
    op.drop_table('discount')
    op.drop_index(op.f('ix_city_code'), table_name='city')
    op.drop_table('city')
    # ### end Alembic commands ###
